#!/usr/bin/env node

'use strict';

// mri component ${componentName} [-w] [targetPath]

const program = require('commander');
const join = require('path').join;
const readFile = require('fs').readFileSync;
const fs = require('fs-extra');
const _ = require('lodash');
const chalk = require('chalk');
const fp = require('lodash/fp');
const axios = require('axios');


console.log('请使用 mri g component')

// const cheerio = require('cheerio');
// const util = require('../lib/common/util');

// const DEF_OUT_PATH = {
//     component: './src/components',
//     widget: './src/widgets'
// };
//
// const FILES = [
//     {name: 'index.ts', temp: '../template/component/index'},
//     {name: '<%=fileName%>.less', temp: '../template/component/styles'},
//     {name: '<%=fileName%>.tsx', temp: '../template/component/main'}
// ];
//
// program
//     .usage('componentName [options] targetPath')
//     .option('-w, --widget', 'create component as widget ')
//     // 添加 -t --theme，use use 处理
//     .option('-t, --theme', 'create component as widget ')
//     .parse(process.argv);
//
// const {args, widget: isWidget} = program;
// const comType = isWidget ? 'widget' : 'component';
// const outPath = args[1] || DEF_OUT_PATH[comType];
//
// checkValidity(args[0])();
// if(!fs.existsSync(outPath)) {
//     console.log(chalk.red('Please specify a valid path.'));
//     return void 0;
// }
//
// const dirPath = join(outPath, args[0]);
// if(fs.existsSync(dirPath)) {
//     console.log(chalk.red(`The name of ${args[0]} ${comType} has already exists. `));
//     console.log(chalk.green(`Please define a new name and create it. `));
//     return void 0;
// }
// // fs.mkdirSync(dirPath);
//
// wrapWeather(weather => {
//     const transValue = fp.compose(fp.upperFirst, fp.camelCase);
//     let [className] = args;
//
//     className = isWidget ? `${className}Widget` : className;
//
//     let tmpParams = {
//         fileName: args[0],
//         className: transValue(className),
//         type: transValue(comType),
//         ...weather
//     };
//     const comments = util.createComments(tmpParams);
//     _.forEach(FILES, file => {
//         let content = readFile(join(__dirname, file.temp), {encoding: 'utf8'});
//         fs.outputFileSync(join(dirPath, _.template(file.name)(tmpParams)), comments + _.template(content)(tmpParams));
//     });
//
//     console.log(chalk.green(`Successfully generated ${comType} at ${dirPath}.`));
// });
//
// function checkValidity(argument) {
//     if(!!argument) {
//         return () => {};
//     }
//     return () => {
//         program.help();
//         return void 0;
//     };
// }
//
// async function wrapWeather(cb) {
//     const ipInfo = await axios.get('https://ip.cn/', {timeout: 2000})
//         .then(res => res.data)
//         .catch(err => '');
//     const city = ipInfo ? _.head(cheerio.load(ipInfo)('code')[1].children[0].data.split(' ')) : '上海';
//     let weather = await axios.get('https://www.sojson.com/open/api/weather/json.shtml?city=' + encodeURIComponent(city), {timeout: 3000})
//         .then(res => {
//             let {data: {forecast}} = res.data;
//             return forecast[0] || {};
//         })
//         .catch(err => '');
//
//     cb({weather: _.isEmpty(weather) ? '' : `${weather.type} ${weather.fx} ${weather.notice}`});
// }
