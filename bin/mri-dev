#!/usr/bin/env node

/**
 *  mri dev ${project}
 *  启动 MRI 项目
 */

'use strict';
const _program = require('commander');
const $run = require('../lib/common/run');
const $log = require('../lib/common/log');
const $task = require('../lib/services/task');

const pk = require('../package.json');
const task = 'dev';

_program
    .usage('mri dev [options]')
    .description('运行MRI的开发环境')
    .description(
        '更多的环境变量\n  参考 https://umijs.org/guide/env-variables.html\n  在src/project/${project}/${project}-config.js 中进行配置',
    )
    .option('-c, --BABEL_CACHE', '是否使用BabelCache模式')
    .option('-i, --interface', '生成const interface文件')
    .option('-d, --debug', 'debug 模式')
    .option('-s, --service [name]', '服务器环境')
    .option('-f, --force', '强制启动（关闭其他node端口）')
    .option('-p, --port [port]', 'server port')
    .option('-b, --browser', '是否默认打开浏览器')
    .version(pk.version);

_program.parse(process.argv);

$log.title(`mri dev [project] 启动项目`);

$run.branch('all', () => {
    $run.root(() => {
        $run.mri(() => {
            $run.package(() => {
                $run.upgrade(() => {
                    let project = _program.args[0];
                    $task.run(task, project);
                });
            });
        });
    });
});
